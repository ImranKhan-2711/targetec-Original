package com.tec.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.tec.dao.QuestionMasterDao;
import com.tec.model.AnswerMaster;
import com.tec.model.AnswerOptions;
import com.tec.model.QuestionMaster;
import com.tec.service.AnswerService;
import com.tec.service.QuestionService;
import com.tec.template.Page;

/**
 * 
 * @author Mandeep
 *
 */
@Service("questionService")
public class QuestionServiceImpl implements QuestionService {

	@Resource(name = "questionMasterDao")
	private QuestionMasterDao questionMasterDao;

	@Resource(name = "answerService")
	protected AnswerService answerService;

	public QuestionMaster findQuestionBean(Long id) {
		QuestionMaster questionMaster = new QuestionMaster();
		AnswerMaster answerMaster = new AnswerMaster();
		AnswerOptions answerOptions = new AnswerOptions();
		AnswerOptions answerOptions2 = new AnswerOptions();
		List<AnswerMaster> answerMasters = new ArrayList<AnswerMaster>();
		List<AnswerOptions> answerOptionss = new ArrayList<AnswerOptions>();
		Page<AnswerMaster> answerMasterPage =null;
		if (id != null) {
			questionMaster = questionMasterDao.findByQuestionMasterId(id);
			Page<AnswerMaster> page = new Page<AnswerMaster>(1, 10, -1, "", "asc");
			answerMasterPage = answerService.findAnswers(page, id);
			answerMasters = answerMasterPage.getPageItems();
			for(AnswerMaster a : answerMasters){
				answerOptions.setAnsOption("test");
				answerOptions2.setAnsOption("test1");
				answerOptionss.add(answerOptions);
				answerOptionss.add(answerOptions2);
				a.setOptions(answerOptionss);
			}
		} else {

			questionMaster = new QuestionMaster(null, null, null, null, null, null, null, 50, 100, null, null);
			answerMaster = new AnswerMaster(null, null, null, null, null);
			answerMasters.add(answerMaster);
		}
		questionMaster.setAnswers(answerMasters);
		return questionMaster;
	}

	public QuestionMaster updateQuestion(QuestionMaster questionMaster) {
		QuestionMaster questionMasterReturn = new QuestionMaster();
		if (questionMaster.getId() != null && !questionMaster.getId().equals("")) {
			questionMasterReturn = questionMasterDao.update(questionMaster);
		}else{
			questionMasterReturn = questionMasterDao.findByQuestionMasterId(questionMasterDao.insert(questionMaster));
		}
		
		List<AnswerMaster> answerMasters = questionMaster.getAnswers();
		for (AnswerMaster answerMaster : answerMasters) {
			if (Integer.parseInt(answerMaster.getSeqNo()) > -1) {
				answerMaster.setQuestionMaster(questionMasterReturn);
				answerMaster = answerService.updateAnswer(answerMaster);
			}
		}
		questionMasterReturn.setAnswers(answerMasters);
		return questionMasterReturn;
	}

	public Page<QuestionMaster> listQuestions(Page<QuestionMaster> page, Long typeId) {
		return questionMasterDao.findQuestions(page, typeId);
	}

}
