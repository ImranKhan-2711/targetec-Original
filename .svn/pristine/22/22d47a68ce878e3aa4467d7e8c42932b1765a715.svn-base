package com.tec.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.security.Principal;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.PropertySource;
import org.springframework.context.annotation.PropertySources;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

@Controller
@RequestMapping({ "/ajax" })
@PropertySources(@PropertySource("classpath:com/tec/config/application.properties"))
public class AjaxController extends BaseController {
	private static final Logger logger = LoggerFactory
			.getLogger(AjaxController.class);
	
	@RequestMapping(value = "/upload")
	@ResponseBody
	public String createCategory(Principal currentUser, HttpServletRequest request,Model model,@RequestParam("file") MultipartFile file) {
		String fileName=null;
		if (!file.isEmpty()) {
			try {
				byte[] bytes = file.getBytes();

				// Creating the directory to store file
				File dir = new File(getProperty("server.resource.base"));
				fileName=new Date().getTime()+"_image.png";
				// Create the file on server
				File serverFile = new File(dir.getAbsolutePath()
						+ File.separator + fileName);
				BufferedOutputStream stream = new BufferedOutputStream(
						new FileOutputStream(serverFile));
				stream.write(bytes);
				stream.close();
			}catch(Exception e){
				e.printStackTrace();
			}
		}
		return fileName;
	}

}
