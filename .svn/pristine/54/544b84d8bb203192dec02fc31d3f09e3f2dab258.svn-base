<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<http pattern="/resources/**" security="none" />

	<http use-expressions="true">
		<!-- Authentication policy -->
		<form-login login-page="/signin" login-processing-url="/signin/authenticate" authentication-failure-url="/signin?param.error=invalid credentials" default-target-url="/userdefault" username-parameter="username" password-parameter="password"/>
		<logout logout-url="/signout" delete-cookies="JSESSIONID" />
		<intercept-url pattern="/favicon.ico" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/signin/**" access="permitAll" />
		<!-- intercept-url pattern="/do/**" access="hasRole('DO_ROLE')" />
		<intercept-url pattern="/bo/**" access="hasRole('BLOCK_ROLE')" /-->
		<intercept-url pattern="/default" access="isAuthenticated()" />
		<csrf />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<jdbc-user-service data-source-ref="dataSource" 
							users-by-username-query="select username, trim(password), true from account where username = ?"
							authorities-by-username-query="select username, role_id from account where username = ?"/>
							
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>