package com.tec.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import javax.inject.Inject;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.simple.ParameterizedRowMapper;
import org.springframework.stereotype.Repository;

import com.tec.dao.NeuroGenericDAO;
import com.tec.dao.TestMasterDao;
import com.tec.model.Account;
import com.tec.model.CategoryMaster;
import com.tec.model.ResourceMaster;
import com.tec.model.TestMaster;
import com.tec.model.TypeMaster;
import com.tec.template.Page;
import com.tec.template.PaginationHelper;

@Repository("testMasterDao")
public class TestMasterDaoImpl extends NeuroGenericDAO implements TestMasterDao {

	public TestMasterDaoImpl() {

	}

	@Inject
	public TestMasterDaoImpl(JdbcTemplate jdbcTemplate) {
		super(jdbcTemplate);
	}

	public Page<TestMaster> listTest(Page<TestMaster> page, String testName, String description, String typeName,
			String categoryName) {
		PaginationHelper<TestMaster> ph = new PaginationHelper<TestMaster>();

		String selSQL = "SELECT tm.id, tm.category_id,cm.name category_name, tm.type_id, tpm.name type_name, tm.name, tm.description, tm.image, tm.question_count, tm.duration, tm.status FROM test_master tm,type_master tpm,category_master cm where tpm.id = tm.type_id and cm.id = tm.category_id ";

		if (testName != null && !testName.equals("")) {
			selSQL += " and tm.name like '%" + testName + "%'";
		}
		if (description != null && !description.equals("")) {
			selSQL += " and tm.description like '%" + description + "%'";
		}
		if (typeName != null && !typeName.equals("")) {
			selSQL += " and tpm.name like '%" + typeName + "%'";
		}
		if (categoryName != null && !categoryName.equals("")) {
			selSQL += " and cm.name like '%" + categoryName + "%'";
		}
		System.out.println(jdbcTemplate + "jdbcTemplate\n\n\n");
		String countSQL = "select count(*) from (" + selSQL + ") c";
		return ph.fetchPage(jdbcTemplate, countSQL, selSQL, new String[] {}, page, new TestMasterMapper());
	}

	private static final class TestMasterMapper implements ParameterizedRowMapper<TestMaster> {
		public TestMaster mapRow(ResultSet rs, int rowNum) throws SQLException {
			return new TestMaster(rs.getLong(1), new CategoryMaster(rs.getLong(2), rs.getString(3)),
					new TypeMaster(rs.getLong(4), rs.getString(5)), rs.getString(6), rs.getString(7),
					new ResourceMaster(rs.getLong(8)), rs.getInt(9), rs.getTime(10), rs.getString(11));
		}
	}

	public TestMaster getTest(Long id) {
		PaginationHelper<TestMaster> ph = new PaginationHelper<TestMaster>();
		Page<TestMaster> page = new Page<TestMaster>("");
		String selSQL = "SELECT tm.id, tm.category_id,cm.name category_name, tm.type_id, tpm.name type_name, tm.name, tm.description, tm.image, tm.question_count, tm.duration, tm.status FROM test_master tm,type_master tpm,category_master cm where tpm.id = tm.type_id and cm.id = tm.category_id and tm.id=? ";
		String countSQL = "select count(*) from (" + selSQL + ") c";
		return ph.fetchPage(jdbcTemplate, countSQL, selSQL, new Object[] { id }, page, new TestMasterMapper())
				.getPageItems().get(0);
	}

	public TestMaster insert(TestMaster testMaster) {
		String insertSQL="INSERT into test_master (category_id, type_id, name, description, image, question_count, duration, status) VALUES (?,?,?,?,?,?,?,?)";
		jdbcTemplate.update(insertSQL, new Object[]{testMaster.getCategoryMaster().getId(),testMaster.getTypeMaster().getId(),
				testMaster.getName(),testMaster.getDescription(),testMaster.getImage().getId(),testMaster.getQuestionCount(),testMaster.getDuration(),"ACTIVE"});
		testMaster.setId(jdbcTemplate.queryForLong("select max(id) from account"));
		return testMaster;
	}
	
	public TestMaster update(TestMaster testMaster) {
		String updateSQL="UPDATE test_master set category_id=?, type_id=?, name=?, description=?, image=?, question_count=?, duration=?, status=? WHERE id=?";
			jdbcTemplate.update(updateSQL, new Object[]{testMaster.getCategoryMaster().getId(),testMaster.getTypeMaster().getId(),
					testMaster.getName(),testMaster.getDescription(),testMaster.getImage().getId(),testMaster.getQuestionCount(),testMaster.getDuration(),"ACTIVE",testMaster.getId()});
		return testMaster;
	}
}
